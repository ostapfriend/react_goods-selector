{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","prevState","removeGood","filter","prevGood","actionButton","isSelected","clear","selectArray","this","className","length","slice","join","map","includes","textForButton","onClick","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmBIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,cACtBM,QAAO,SAACC,GAAD,OAAeA,IAAaL,U,EAI1CM,aAAe,SAACC,EAAqBP,GACnC,OAAOO,EACH,EAAKJ,WAAWH,GAChB,EAAKD,QAAQC,I,EAGnBQ,MAAQ,WACN,EAAKP,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IA5CWW,EA4CZ,OACCX,EAAkBY,KAAKb,MAAvBC,cAER,OACE,sBAAKa,UAAU,MAAf,UACE,oBACEA,UAAU,aADZ,UAjDeF,EAoDEX,EAnDI,IAAvBW,EAAYG,OACP,oBAGkB,IAAvBH,EAAYG,OACR,GAAN,OAAUH,EAAY,GAAtB,gBAGI,GAAN,OAAUA,EAAYI,MAAM,GAAI,GAAGC,KAAK,MAAxC,gBAAqDL,EAAYI,OAAO,GAAxE,oBA8CM,oBAAIF,UAAU,aAAd,SACGhB,EAAgBoB,KAAI,SAACf,GACpB,IAAMO,EAAaT,EAAckB,SAAShB,GACpCiB,EAAgBV,EAAa,SAAW,SAE9C,OACE,sBAAKI,UAAU,YAAf,UACE,oBAAIA,UAAU,iBAAd,SACGX,GADiCA,GAIpC,qBAAKW,UAAU,wBAAf,SACE,wBACEA,UAAU,cACVO,QAAS,kBAAM,EAAKZ,aAAaC,EAAYP,IAC7CmB,KAAK,SAHP,SAKGF,cAQZnB,EAAcc,OAAS,GACtB,wBACEM,QAASR,KAAKF,MACdW,KAAK,SACLR,UAAU,oBAHZ,0B,GAjEQS,IAAMC,WA8ETzB,IC5Gf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c3c9ad27.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst createMessage = (selectArray: string[]): string => {\n  if (selectArray.length === 0) {\n    return 'No goods selected';\n  }\n\n  if (selectArray.length === 1) {\n    return `${selectArray[0]} is selected`;\n  }\n\n  return `${selectArray.slice(0, -1).join(', ')} and ${selectArray.slice(-1)} are selected`;\n};\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods\n        .filter((prevGood) => (prevGood !== good)),\n    }));\n  };\n\n  actionButton = (isSelected: boolean, good: string) => {\n    return isSelected\n      ? this.removeGood(good)\n      : this.addGood(good);\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__title\"\n        >\n          {createMessage(selectedGoods)}\n        </h1>\n\n        <ul className=\"App__names\">\n          {goodsFromServer.map((good) => {\n            const isSelected = selectedGoods.includes(good);\n            const textForButton = isSelected ? 'Remove' : 'Select';\n\n            return (\n              <div className=\"App__card\">\n                <li className=\"App__card-name\" key={good}>\n                  {good}\n                </li>\n\n                <div className=\"App__container-button\">\n                  <button\n                    className=\"App__button\"\n                    onClick={() => this.actionButton(isSelected, good)}\n                    type=\"button\"\n                  >\n                    {textForButton}\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </ul>\n\n        {selectedGoods.length > 0 && (\n          <button\n            onClick={this.clear}\n            type=\"button\"\n            className=\"App__clear-button\"\n          >\n            Clear\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}