{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","prevState","isVisible","removeGood","filter","prevGood","clear","selectArray","this","className","length","slice","join","map","onClick","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmBIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,IAC5CG,WAAW,O,EAIfC,WAAa,SAACJ,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,cACtBO,QAAO,SAACC,GAAD,OAAeA,IAAaN,KACtCG,WAAW,O,EAIfI,MAAQ,WACN,EAAKN,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAxCWU,EAwCZ,OACCV,EAAkBW,KAAKZ,MAAvBC,cAER,OACE,sBAAKY,UAAU,MAAf,UACE,oBACEA,UAAU,aADZ,UA7CeF,EAgDEV,EA/CI,IAAvBU,EAAYG,OACP,oBAGkB,IAAvBH,EAAYG,OACR,GAAN,OAAUH,EAAY,GAAtB,gBAGI,GAAN,OAAUA,EAAYI,MAAM,GAAI,GAAGC,KAAK,KAAxC,gBAAoDL,EAAYI,OAAO,GAAvE,oBA0CM,oBAAIF,UAAU,aAAd,SACGf,EAAgBmB,KAAI,SAACd,GAAD,OACnB,sBAAKU,UAAU,YAAf,UACE,oBAAIA,UAAU,iBAAd,SACGV,GADiCA,GAIpC,sBAAKU,UAAU,wBAAf,UACE,wBACEA,UAAU,cACVK,QAAS,kBAAM,EAAKhB,QAAQC,IAC5BgB,KAAK,SAHP,oBAQA,wBACEN,UAAU,kCACVK,QAAS,kBAAM,EAAKX,WAAWJ,IAC/BgB,KAAK,SAHP,+BAYR,wBACED,QAASN,KAAKF,MACdS,KAAK,SACLN,UAAU,oBAHZ,0B,GA/DUO,IAAMC,WA2ETtB,ICzGfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bacb7912.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst createMessage = (selectArray: string[]): string => {\n  if (selectArray.length === 0) {\n    return 'No goods selected';\n  }\n\n  if (selectArray.length === 1) {\n    return `${selectArray[0]} is selected`;\n  }\n\n  return `${selectArray.slice(0, -1).join(',')} and ${selectArray.slice(-1)} are selected`;\n};\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n      isVisible: false,\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods\n        .filter((prevGood) => (prevGood !== good)),\n      isVisible: true,\n    }));\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__title\"\n        >\n          {createMessage(selectedGoods)}\n        </h1>\n\n        <ul className=\"App__names\">\n          {goodsFromServer.map((good) => (\n            <div className=\"App__card\">\n              <li className=\"App__card-name\" key={good}>\n                {good}\n              </li>\n\n              <div className=\"App__container-button\">\n                <button\n                  className=\"App__button\"\n                  onClick={() => this.addGood(good)}\n                  type=\"button\"\n                >\n                  Select\n                </button>\n\n                <button\n                  className=\"App__button App__button--remove\"\n                  onClick={() => this.removeGood(good)}\n                  type=\"button\"\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n        </ul>\n\n        <button\n          onClick={this.clear}\n          type=\"button\"\n          className=\"App__clear-button\"\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}